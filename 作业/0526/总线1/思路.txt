/**
 * Vue中的事件总线-----原理
 * 绑定事件
 * $on('事件类型',回调函数)
 * 分发事件
 * $emit('事件类型',参数数据)
 * 解绑事件
 * $off('事件类型')
 * 自己实现on和emit和off该如何实现
 * 
 * 事件总线---对象---EventBus
 * EventBus.on(eventName,listener)----绑定事件
 * EventBus.emit(eventName,data)----分发事件
 * EventBus.off(eventName)-----解绑事件
 * eventName----事件类型(事件名字)
 * listener----事件监听(回调函数)
 * data----事件对应的回调函数中的参数数据
 * 
 * 绑定事件及分发事件和解绑事件的使用思路:
 * 通过事件总线对象调用on方法进行绑定,然后调用emit方法进行分发,最后通过off方法解绑
 * 例子:
 * EventBus.on('add',f1)
 * EventBus.on('add',f2)
 * EventBus.emit('add',参数)-----f1函数和f2函数中的代码都要执行
 * 绑定的一个事件,实际上可以有多个对应的回调函数
 * 绑定事件的时候,如果存储事件及对应的回调函数(js中存储数据使用数组或者对象)
 * 容器对象:用来存储事件及对应的回调函数
 * {
 *  add:f1,
 *  add:f2
 * }
 * 存储事件及对应回调函数的容器---对象,又由于事件可以对应多个回调函数
 * {
 *  add:[f1,f2,f3,f4]
 * }
 * {add:[f1,f2,f3],del:[f4,f5]}
 */